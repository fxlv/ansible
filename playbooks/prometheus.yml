---
- name: Install and configure Prometheus
  hosts: all
  become: yes
  vars:
    prometheus_version: "3.5.0"
    prometheus_arch: "linux-arm64"
    prometheus_user: "prometheus"
    prometheus_group: "prometheus"
    prometheus_home: "/opt/prometheus"
    prometheus_config_dir: "{{ prometheus_home }}/etc"
    prometheus_bin_dir: "{{ prometheus_home }}/bin"
    prometheus_data_dir: "{{ prometheus_home }}/data"

  tasks:
    - name: Create prometheus group
      group:
        name: "{{ prometheus_group }}"
        state: present

    - name: Create prometheus user
      user:
        name: "{{ prometheus_user }}"
        group: "{{ prometheus_group }}"
        home: "{{ prometheus_home }}"
        shell: /bin/false
        system: yes
        create_home: no
        state: present

    - name: Create prometheus directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ prometheus_user }}"
        group: "{{ prometheus_group }}"
        mode: '0755'
      loop:
        - "{{ prometheus_home }}"
        - "{{ prometheus_bin_dir }}"
        - "{{ prometheus_config_dir }}"
        - "{{ prometheus_data_dir }}"

    - name: Check if Prometheus binary exists
      stat:
        path: "{{ prometheus_bin_dir }}/prometheus"
      register: prometheus_binary

    - name: Download Prometheus
      get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.{{ prometheus_arch }}.tar.gz"
        dest: "/tmp/prometheus-{{ prometheus_version }}.{{ prometheus_arch }}.tar.gz"
        mode: '0644'
      when: not prometheus_binary.stat.exists

    - name: Extract Prometheus
      unarchive:
        src: "/tmp/prometheus-{{ prometheus_version }}.{{ prometheus_arch }}.tar.gz"
        dest: /tmp
        remote_src: yes
      when: not prometheus_binary.stat.exists

    - name: Copy Prometheus binary
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.{{ prometheus_arch }}/prometheus"
        dest: "{{ prometheus_bin_dir }}/prometheus"
        owner: "{{ prometheus_user }}"
        group: "{{ prometheus_group }}"
        mode: '0755'
        remote_src: yes
      when: not prometheus_binary.stat.exists

    - name: Copy promtool binary
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.{{ prometheus_arch }}/promtool"
        dest: "{{ prometheus_bin_dir }}/promtool"
        owner: "{{ prometheus_user }}"
        group: "{{ prometheus_group }}"
        mode: '0755'
        remote_src: yes
      when: not prometheus_binary.stat.exists

    - name: Create Prometheus configuration file
      template:
        src: prometheus.yml.j2
        dest: "{{ prometheus_config_dir }}/prometheus.yml"
        owner: "{{ prometheus_user }}"
        group: "{{ prometheus_group }}"
        mode: '0644'

    - name: Create systemd service file
      template:
        src: prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service
        mode: '0644'

    - name: Clean up downloaded files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/tmp/prometheus-{{ prometheus_version }}.{{ prometheus_arch }}.tar.gz"
        - "/tmp/prometheus-{{ prometheus_version }}.{{ prometheus_arch }}"
      when: not prometheus_binary.stat.exists

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable and start Prometheus service
      systemd:
        name: prometheus
        enabled: yes
        state: started